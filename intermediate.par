counter int R3, x, y;
synchronised {
automaton aut_x0 {
	init s0;
	accepting s0;
};
automaton aut_x1 {
	init s0;
	s0 -> s1 [42, 42] {};
	s0 -> s2 [0, 41] {};
	s0 -> s2 [43, 65535] {};
	s1 -> s2 [0, 38] {};
	s1 -> s2 [40, 65535] {};
	s1 -> s3 [39, 39] {};
	s2 -> s2 [0, 65535] {};
	s3 -> s4 [39, 39] {};
	s3 -> s2 [0, 38] {};
	s3 -> s2 [40, 65535] {};
	s4 -> s5 [92, 92] {};
	s4 -> s2 [0, 91] {};
	s4 -> s2 [93, 65535] {};
	s5 -> s2 [0, 109] {};
	s5 -> s2 [111, 65535] {};
	s5 -> s6 [110, 110] {};
	s6 -> s2 [0, 38] {};
	s6 -> s2 [40, 65535] {};
	s6 -> s7 [39, 39] {};
	s7 -> s8 [39, 39] {};
	s7 -> s2 [0, 38] {};
	s7 -> s2 [40, 65535] {};
	s8 -> s2 [0, 123] {};
	s8 -> s2 [125, 65535] {};
	s8 -> s9 [124, 124] {};
	s9 -> s2 [0, 45] {};
	s9 -> s2 [47, 65535] {};
	s9 -> s10 [46, 46] {};
	s10 -> s11 [101, 101] {};
	s10 -> s2 [0, 100] {};
	s10 -> s2 [102, 65535] {};
	s11 -> s12 [61, 61] {};
	s11 -> s2 [0, 60] {};
	s11 -> s2 [62, 65535] {};
	s12 -> s13 [96, 96] {};
	s12 -> s2 [0, 95] {};
	s12 -> s2 [97, 65535] {};
	s13 -> s14 [96, 96] {};
	s13 -> s2 [0, 95] {};
	s13 -> s2 [97, 65535] {};
	s14 -> s15 [108, 108] {};
	s14 -> s2 [0, 107] {};
	s14 -> s2 [109, 65535] {};
	s15 -> s2 [0, 46] {};
	s15 -> s2 [48, 65535] {};
	s15 -> s16 [47, 47] {};
	s16 -> s2 [0, 65535] {};
	accepting s3, s4, s12, s8, s13, s5, s2, s9, s14, s6, s1, s7, s0, s15, s10, s11;
};
automaton aut_x2 {
	init s0;
	s0 -> s0 [0, 65535] {R3 += 1};
	accepting s0;
};
};
constraint (R3 + -8 = 0 && x + -15 != 0);
