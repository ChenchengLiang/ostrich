#!/bin/bash

if [ $(uname) = "Linux" ]; then
    pathCmd="readlink -f"
elif [ $(uname) = "Darwin" ]; then
    pathCmd="stat -f %N"
else
    pathCmd="realpath"
fi

BASEDIR=$(dirname $($pathCmd $0))
TARGET=$(echo $BASEDIR/target/scala-*/ostrich-assembly*.jar)
LIBDIR=$BASEDIR/lib
SCALA=scala
JAVA=java
export JAVA_OPTS="-Xss20000k -Xmx2000m"

princessParams=()
ostrichParams=""

USAGE=$(cat <<-END
Usage:./ostrich <options> files

Available options : (for boolean arguments, + is ture and - is false)
[+-]incremental           Incremental SMT-LIB 2 interpreter.           (default: -)
                            (Must use +incremental when generating models)
-timeout=val              Set a timeout in milliseconds                (default: infty)

[+-]costenriched           -- use cost enriched automata               (default: -)

when costenriched is true, the following options are available:
-backend=val               -- backend to use for solving               (default: unary; available: unary, catra, baseline)
[+-]under-approx           -- use under-approximation heuristic        (default: +)
[+-]over-approx            -- use over-approximation heuristic         (default: +)
[+-]find-model-heuristic   -- use find model heuristic                 (default: +)

when costenriched is false, the following options are available: 
[+-]minimizeAutomata       -- minimize the initial regular constraints (default: -)
[+-]eager                  -- eagerly solve regular constraints        (default: -)
[+-]forward                -- use forward analysis                     (default: -)
[+-]parikh                 -- use parikh image                         (default: -)
END
)

for p; do
    case "$p" in
    [+-]eager | [+-]forward | -length=* | [+-]minimizeAutomata | [+-]parikh | [+-]costenriched | [+-]under-approx | [+-]over-approx | [+-]find-model-heuristric | -backend=*)
        if [ x"$ostrichParams" = x"" ]; then
            ostrichParams=$p
        else
            ostrichParams=$ostrichParams,$p
        fi
        ;;
    -h | --help)
        echo "$USAGE"
        exit 0
        ;;
    [+-]incremental | -timeout=*)
        princessParams+=("$p")
        ;;
    *)
        echo "Unknown option: $p."
        echo "Use -h or --help for usage information."
        exit 0
        ;;
    esac
done


exec $JAVA $JAVA_OPTS -cp $TARGET \
    ostrich.OstrichMain -stringSolver=ostrich.OstrichStringTheory:$ostrichParams \
    "${princessParams[@]}"
