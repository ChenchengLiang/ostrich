(declare-const IPAddr String)
(declare-const o1 String)
(declare-const o2 String)
(declare-const o3 String)
(declare-const o4 String)
(assert (str.in.re IPAddr (re.union (re.++ (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.+ (re.range "0" "2"))) (re.++ (re.++ (re.++ (re.union (re.union (re.+ (re.range "0" "2")) (re.++ (re.+ (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.++ (re.++ (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.* (re.range "0" "2"))) (str.to.re "H"))) (str.to.re "v")) (re.union (re.* (re.range "0" "2")) (re.union (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))))) (str.to.re ",")))))
(assert (= IPAddr (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ o4 "") o3) ",") o2) "T") o1)))
(assert (and (>= (str.len o1) 0) (>= (str.to.int o2) 1) (>= (str.to.int o3) 0) (>= (str.len o4) 2)))
(assert (or (= (str.to.int o1) 0) (= (str.len o2) 0) (= (str.len o3) 1) (= (str.len o4) 1)))
(assert (and (<= (str.to.int o1) 2) (<= (str.len o2) 5) (<= (str.to.int o3) 5) (<= (str.len o4) 4)))
(check-sat)
