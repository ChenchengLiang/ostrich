(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.++ (re.++ (re.union (re.++ (re.++ (re.union (re.++ (re.++ (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2"))) (str.to.re "")) (re.union (re.union (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2")))) (str.to.re "")) (re.union (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2")))) (str.to.re "'")) (re.++ (re.++ (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2"))))))
(assert (not (str.in.re IPAddr (re.union (re.union (re.++ (re.++ (re.union (re.union (re.++ (re.++ (re.range "0" "5") (str.to.re "5M")) (re.union (re.++ (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "]")) (re.++ (re.++ (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "") (str.to.re "A")))))) (str.to.re "")) (re.++ (re.++ (re.range "0" "5") (str.to.re "2")) (re.++ (re.++ (re.union (re.range "0" "9") (re.range "0" "4")) (str.to.re "")) (re.union (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.union (str.to.re "y") (str.to.re "@"))))))) (str.to.re "")) (re.union (re.++ (re.range "0" "5") (str.to.re "5")) (re.++ (re.++ (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "")) (re.union (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.union (str.to.re "0") (str.to.re "'\x0b'"))))))) (str.to.re "c")) (re.union (re.++ (re.range "0" "5") (str.to.re "cs")) (re.union (re.++ (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "")) (re.union (re.++ (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.union (str.to.re "z") (str.to.re ""))))))))))
(check-sat)
