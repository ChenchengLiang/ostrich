(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.++ (re.union (re.++ (re.union (re.union (re.++ (re.union (re.++ (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2"))) (str.to.re ".")) (re.union (re.union (re.* (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.* (re.range "0" "2")))) (str.to.re ".")) (re.union (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2")))) (str.to.re "e")) (re.union (re.union (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.+ (re.range "0" "2"))))))
(assert (not (str.in.re IPAddr (re.++ (re.++ (re.union (re.++ (re.++ (re.union (re.++ (re.++ (re.range "0" "5") (str.to.re "")) (re.++ (re.union (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "2")) (re.union (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "R") (str.to.re "`")))))) (str.to.re ".")) (re.union (re.union (re.range "0" "5") (str.to.re "AU")) (re.++ (re.++ (re.union (re.range "0" "9") (re.range "0" "4")) (str.to.re "A")) (re.++ (re.++ (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "0") (str.to.re "C"))))))) (str.to.re "")) (re.union (re.union (re.range "0" "5") (str.to.re "")) (re.++ (re.++ (re.union (re.range "0" "9") (re.range "0" "4")) (str.to.re "")) (re.++ (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.union (str.to.re "x") (str.to.re "1"))))))) (str.to.re "")) (re.++ (re.union (re.range "0" "5") (str.to.re "5{")) (re.++ (re.++ (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "2")) (re.union (re.++ (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "0") (str.to.re "2"))))))))))
(check-sat)
