(declare-const IPAddr String)
(assert (>= (str.to.int IPAddr) 2))
(assert (<= 7 (str.to.int IPAddr)))
(assert (str.in.re IPAddr (re.++ (re.union (re.+ (re.+ (re.range "0" "9"))) (re.range "0" "9")) (re.+ (re.++ (re.range "0" "2") (re.++ (re.++ (re.+ (re.* (re.range "0" "9"))) (re.range "0" "9")) (re.++ (re.* (re.union (re.range "0" "2") (re.union (re.++ (re.+ (re.* (re.range "0" "9"))) (re.range "0" "9")) (re.++ (re.+ (re.union (re.range "0" "2") (re.union (re.* (re.union (re.* (re.+ (re.range "0" "9"))) (re.range "0" "9"))) (re.union (re.range "0" "2") (str.to.re "#"))))) (str.to.re ""))))) (str.to.re ""))))))))
(assert (not (str.in.re IPAddr (re.++ (re.range "0" "5") (re.union (re.++ (re.union (re.++ (re.range "0" "9") (str.to.re "_")) (re.++ (re.range "0" "9") (re.union (re.opt (re.range "0" "9")) (re.opt (re.++ (str.to.re "L") (str.to.re "")))))) (re.range "0" "4")) (re.union (str.to.re "2%g") (re.union (re.range "0" "5") (re.union (re.union (re.union (re.++ (re.++ (re.range "0" "9") (str.to.re "")) (re.++ (re.range "0" "9") (re.++ (re.opt (re.range "0" "9")) (re.opt (re.union (str.to.re "'\x0b'") (str.to.re "M")))))) (re.range "0" "4")) (re.union (str.to.re "7-V") (re.++ (re.range "0" "5") (re.union (re.union (re.++ (re.union (re.++ (re.range "0" "9") (str.to.re "s")) (re.union (re.range "0" "9") (re.union (re.opt (re.range "0" "9")) (re.opt (re.++ (str.to.re "") (str.to.re "R")))))) (re.range "0" "4")) (re.union (str.to.re "l5") (re.union (re.union (re.range "0" "5") (re.union (re.++ (re.++ (re.range "0" "9") (str.to.re "")) (re.union (re.opt (re.++ (re.range "0" "9") (re.++ (re.opt (re.range "0" "9")) (str.to.re "")))) (str.to.re "1"))) (re.range "0" "4"))) (re.++ (str.to.re "khQ") (str.to.re ""))))) (str.to.re ""))))) (str.to.re "")))))))))
(check-sat)
