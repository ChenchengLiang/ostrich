(declare-const IPAddr String)
(assert (>= (str.len IPAddr) 13))
(assert (<= (str.to.int IPAddr) 2))
(assert (str.in.re IPAddr (re.++ (re.++ (re.+ (re.+ (re.range "0" "9"))) (re.range "0" "9")) (re.+ (re.union (re.range "0" "2") (re.++ (re.++ (re.* (re.+ (re.range "0" "9"))) (re.range "0" "9")) (re.union (re.* (re.union (re.range "0" "2") (re.++ (re.++ (re.* (re.* (re.range "0" "9"))) (re.range "0" "9")) (re.union (re.* (re.union (re.range "0" "2") (re.++ (re.+ (re.union (re.* (re.* (re.range "0" "9"))) (re.range "0" "9"))) (re.union (re.range "0" "2") (str.to.re "t"))))) (str.to.re "~"))))) (str.to.re ""))))))))
(assert (not (str.in.re IPAddr (re.union (re.range "0" "5") (re.++ (re.++ (re.union (re.++ (re.range "0" "9") (str.to.re "D")) (re.union (re.range "0" "9") (re.union (re.opt (re.range "0" "9")) (re.opt (re.union (str.to.re "") (str.to.re "~")))))) (re.range "0" "4")) (re.union (str.to.re "E`") (re.union (re.range "0" "5") (re.union (re.union (re.union (re.++ (re.++ (re.range "0" "9") (str.to.re "F")) (re.++ (re.range "0" "9") (re.union (re.opt (re.range "0" "9")) (re.opt (re.union (str.to.re "J") (str.to.re "")))))) (re.range "0" "4")) (re.++ (str.to.re "5") (re.++ (re.range "0" "5") (re.++ (re.union (re.++ (re.union (re.++ (re.range "0" "9") (str.to.re "/")) (re.union (re.range "0" "9") (re.++ (re.opt (re.range "0" "9")) (re.opt (re.union (str.to.re "0") (str.to.re "[")))))) (re.range "0" "4")) (re.union (str.to.re "") (re.union (re.++ (re.range "0" "5") (re.union (re.++ (re.union (re.range "0" "9") (str.to.re "T")) (re.++ (re.range "0" "9") (re.union (re.opt (re.range "0" "9")) (re.opt (re.++ (str.to.re "") (str.to.re "")))))) (re.range "0" "4"))) (re.++ (str.to.re "9") (str.to.re "i"))))) (str.to.re "."))))) (str.to.re "b")))))))))
(check-sat)
