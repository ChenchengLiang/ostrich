(declare-const IPAddr String)
(assert (>= (str.len IPAddr) 1))
(assert (<= (str.len IPAddr) 2))
(assert (str.in.re IPAddr (re.union (re.++ (re.range "0" "9") (re.* (re.range "0" "2"))) (re.* (re.union (re.++ (str.to.re "") (re.union (re.* (re.union (re.union (re.++ (re.* (re.range "0" "9")) (re.+ (re.++ (re.range "0" "9") (re.+ (re.range "0" "2"))))) (re.++ (re.range "0" "9") (str.to.re "."))) (re.union (re.+ (re.range "0" "9")) (re.* (re.++ (re.range "0" "9") (re.* (re.range "0" "2"))))))) (str.to.re "."))) (re.union (re.* (re.range "0" "9")) (re.* (re.union (re.range "0" "9") (re.+ (re.range "0" "2"))))))))))
(assert (not (str.in.re IPAddr (re.union (re.++ (re.++ (re.union (str.to.re "D") (re.union (re.range "0" "9") (re.union (re.union (re.range "0" "9") (re.opt (re.union (str.to.re "T") (str.to.re "1")))) (re.opt (re.range "0" "9"))))) (re.++ (re.union (re.++ (re.range "0" "5") (str.to.re "[")) (re.++ (re.++ (re.++ (re.union (str.to.re "52") (re.++ (re.range "0" "4") (re.++ (str.to.re "?") (re.union (re.range "0" "9") (re.union (re.union (re.range "0" "9") (re.opt (re.++ (str.to.re "0") (str.to.re "1")))) (re.opt (re.range "0" "9"))))))) (re.range "0" "5")) (re.++ (str.to.re "52") (str.to.re ""))) (re.++ (re.++ (str.to.re "G~2") (re.union (re.range "0" "4") (re.union (str.to.re "i") (re.union (re.range "0" "9") (re.union (re.++ (re.range "0" "9") (re.opt (re.++ (str.to.re "") (str.to.re "")))) (re.opt (re.range "0" "9"))))))) (re.range "0" "5")))) (str.to.re "A"))) (re.union (re.union (str.to.re "52") (re.union (re.range "0" "4") (re.union (str.to.re "") (re.++ (re.range "0" "9") (re.++ (re.++ (re.range "0" "9") (re.opt (re.union (str.to.re "'\t'") (str.to.re "Q")))) (re.opt (re.range "0" "9"))))))) (re.range "0" "5"))) (re.range "0" "4")))))
(check-sat)
