(declare-const IPAddr String)
(assert (>= (str.to.int IPAddr) 3))
(assert (<= 25 (str.len IPAddr)))
(assert (str.in.re IPAddr (re.++ (re.++ (re.+ (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.++ (str.to.re ";") (re.++ (re.union (re.+ (re.range "0" "2")) (re.union (re.* (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.++ (str.to.re "") (re.++ (re.++ (re.+ (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.++ (str.to.re "=") (re.++ (re.* (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))))))))))))
(assert (not (str.in.re IPAddr (re.++ (re.union (re.++ (str.to.re "O:") (re.range "0" "5")) (re.union (re.union (str.to.re "o") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (str.to.re "") (str.to.re "_"))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "=") (re.++ (re.++ (re.union (str.to.re "2t") (re.range "0" "5")) (re.union (re.union (str.to.re "]") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.union (str.to.re "'\x0c'") (str.to.re ""))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "=") (re.++ (re.++ (re.union (str.to.re "4g") (re.range "0" "5")) (re.++ (re.++ (str.to.re "5") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re "' '") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "3") (re.union (re.++ (str.to.re "Ou") (re.range "0" "5")) (re.++ (re.union (str.to.re "a") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.union (str.to.re "0") (re.union (re.range "0" "9") (re.opt (re.range "0" "9"))))) (str.to.re "1")))))))))))))
(check-sat)
