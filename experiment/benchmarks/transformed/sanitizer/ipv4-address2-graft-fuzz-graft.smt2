(declare-const IPAddr String)
(assert (>= 3 (str.to.int IPAddr)))
(assert (<= 25 (str.len IPAddr)))
(assert (str.in.re IPAddr (re.++ (re.++ (re.+ (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.++ (str.to.re "q") (re.++ (re.union (re.+ (re.range "0" "2")) (re.union (re.* (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.++ (str.to.re "") (re.++ (re.++ (re.+ (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.++ (str.to.re ".") (re.++ (re.* (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))))))))))))
(assert (not (str.in.re IPAddr (re.++ (re.union (re.++ (str.to.re "{:") (re.range "0" "5")) (re.union (re.union (str.to.re "_") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (str.to.re "") (str.to.re "V"))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re ".") (re.++ (re.++ (re.union (str.to.re "2Z") (re.range "0" "5")) (re.union (re.union (str.to.re "%") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.union (str.to.re "y") (str.to.re ""))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re ".") (re.++ (re.++ (re.union (str.to.re "4|") (re.range "0" "5")) (re.++ (re.++ (str.to.re "5") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re "#") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "3") (re.union (re.++ (str.to.re "{E") (re.range "0" "5")) (re.++ (re.union (str.to.re "T") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.union (str.to.re "0") (re.union (re.range "0" "9") (re.opt (str.to.re "1"))))) (re.range "0" "9")))))))))))))
(check-sat)
