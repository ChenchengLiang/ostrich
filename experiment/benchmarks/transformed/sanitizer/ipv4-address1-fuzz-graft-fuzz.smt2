(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.++ (re.++ (re.* (re.range "0" "2")) (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.union (str.to.re "z") (re.union (re.++ (re.* (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.union (str.to.re "") (re.++ (re.union (re.* (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.++ (str.to.re "U") (re.++ (re.+ (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9"))))))))))))
(assert (not (str.in.re IPAddr (re.union (re.union (re.union (str.to.re ":'\n'y}{U'\r'-&P<BE3Lne}P94") (re.range "0" "5")) (re.union (re.++ (str.to.re "") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.union (str.to.re "0") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "@") (re.++ (re.union (re.++ (str.to.re "t") (re.range "0" "5")) (re.++ (re.union (str.to.re "s") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.union (str.to.re "0") (str.to.re "e"))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "") (re.++ (re.++ (re.union (str.to.re "Z") (re.range "0" "5")) (re.union (re.++ (str.to.re "") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re ",") (str.to.re ""))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "") (re.union (re.++ (str.to.re "~") (re.range "0" "5")) (re.++ (re.union (str.to.re "") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (re.range "0" "9") (str.to.re "o"))) (re.++ (re.range "0" "9") (re.opt (str.to.re "")))))))))))))))
(check-sat)
