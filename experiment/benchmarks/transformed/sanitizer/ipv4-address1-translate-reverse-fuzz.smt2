(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.++ (re.union (re.++ (re.union (re.union (re.union (re.union (re.union (re.* (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2"))) (str.to.re "c")) (re.++ (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2")))) (str.to.re "")) (re.++ (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2")))) (str.to.re "")) (re.++ (re.union (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.+ (re.range "0" "2"))))))
(assert (not (str.in.re IPAddr (re.++ (re.union (re.union (re.union (re.++ (re.++ (re.++ (re.union (re.range "0" "5") (str.to.re "")) (re.++ (re.++ (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "q")) (re.++ (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.union (str.to.re "0") (str.to.re "")))))) (str.to.re "d")) (re.union (re.++ (re.range "0" "5") (str.to.re "2")) (re.++ (re.union (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "2")) (re.union (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "") (str.to.re "G"))))))) (str.to.re "K")) (re.union (re.union (re.range "0" "5") (str.to.re "'\x0c'Cm")) (re.++ (re.++ (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "Q")) (re.++ (re.++ (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "0") (str.to.re "F"))))))) (str.to.re "")) (re.union (re.++ (re.range "0" "5") (str.to.re "52")) (re.++ (re.union (re.union (re.range "0" "9") (re.range "0" "4")) (str.to.re "2")) (re.union (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "3") (str.to.re ""))))))))))
(check-sat)
