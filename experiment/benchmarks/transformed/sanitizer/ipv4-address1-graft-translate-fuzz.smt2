(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.union (re.++ (re.+ (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.union (str.to.re "=") (re.++ (re.++ (re.* (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.union (str.to.re "'\x0c'") (re.union (re.++ (re.+ (re.range "0" "2")) (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.union (str.to.re "v") (re.++ (re.* (re.range "0" "2")) (re.union (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))))))))))))
(assert (not (str.in.re IPAddr (re.++ (re.++ (re.union (str.to.re "{yr") (re.range "0" "5")) (re.++ (re.union (str.to.re "+") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re "") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "") (re.++ (re.++ (re.++ (str.to.re "S'\x0c'") (re.range "0" "5")) (re.union (re.union (str.to.re "n") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (str.to.re "") (str.to.re "-"))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "v") (re.++ (re.union (re.++ (str.to.re "2") (re.range "0" "5")) (re.++ (re.union (str.to.re "") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (str.to.re "-") (str.to.re "1"))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "'\x0c'") (re.++ (re.++ (str.to.re "25") (re.range "0" "5")) (re.++ (re.++ (re.range "0" "9") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (str.to.re "") (str.to.re ";"))) (re.union (re.range "0" "9") (re.opt (str.to.re "w")))))))))))))))
(check-sat)
