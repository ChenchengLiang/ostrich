(declare-const IPAddr String)
(declare-const o1 String)
(declare-const o2 String)
(declare-const o3 String)
(declare-const o4 String)
(assert (str.in.re IPAddr (re.union (re.union (re.++ (re.union (re.union (re.union (re.++ (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2"))) (str.to.re "")) (re.++ (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.* (re.range "0" "2")))) (str.to.re ".")) (re.++ (re.union (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2")))) (str.to.re "")) (re.++ (re.union (re.* (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2"))))))
(assert (= IPAddr (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ o4 ".") o3) "p") o2) "0") o1)))
(assert (and (>= (str.len o1) 2) (>= (str.len o2) 0) (>= (str.len o3) 2) (>= (str.to.int o4) 2)))
(assert (or (= (str.len o1) 0) (= (str.len o2) 0) (= (str.len o3) 1) (= (str.to.int o4) 1)))
(assert (and (<= (str.to.int o1) 4) (<= (str.len o2) 0) (<= (str.len o3) 3) (<= (str.to.int o4) 1)))
(check-sat)
