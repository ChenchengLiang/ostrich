(declare-const IPAddr String)
(assert (>= (str.to.int IPAddr) 3))
(assert (<= 53 (str.len IPAddr)))
(assert (str.in.re IPAddr (re.union (re.++ (re.* (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.++ (str.to.re "x") (re.++ (re.union (re.+ (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.union (str.to.re "") (re.union (re.++ (re.* (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.union (str.to.re "") (re.++ (re.+ (re.range "0" "2")) (re.++ (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))))))))))))
(assert (not (str.in.re IPAddr (re.++ (re.++ (re.++ (str.to.re "j?") (re.range "0" "5")) (re.++ (re.union (str.to.re "2") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.union (str.to.re "") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "S") (re.++ (re.union (re.union (str.to.re "m") (re.range "0" "5")) (re.++ (re.++ (str.to.re ":") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (str.to.re "") (str.to.re "1"))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "c") (re.++ (re.++ (re.union (str.to.re "") (re.range "0" "5")) (re.++ (re.++ (str.to.re "") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.union (str.to.re "") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "r") (re.++ (re.union (str.to.re "") (re.range "0" "5")) (re.union (re.++ (str.to.re "X") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.union (str.to.re "(") (re.range "0" "9"))) (re.++ (re.range "0" "9") (re.opt (str.to.re "")))))))))))))))
(check-sat)
