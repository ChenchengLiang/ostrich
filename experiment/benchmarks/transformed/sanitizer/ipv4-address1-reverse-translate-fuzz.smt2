(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.++ (re.union (re.union (re.union (re.++ (re.union (re.union (re.++ (re.+ (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.* (re.range "0" "2"))) (str.to.re "i")) (re.union (re.union (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2")))) (str.to.re "i")) (re.++ (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2")))) (str.to.re "i")) (re.union (re.++ (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2"))))))
(assert (not (str.in.re IPAddr (re.union (re.++ (re.union (re.++ (re.++ (re.union (re.++ (re.++ (re.range "0" "5") (str.to.re "5")) (re.++ (re.union (re.union (re.range "0" "9") (re.range "0" "4")) (str.to.re "")) (re.union (re.++ (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "") (str.to.re "X")))))) (str.to.re "")) (re.++ (re.++ (re.range "0" "5") (str.to.re ",")) (re.union (re.++ (re.union (re.range "0" "9") (re.range "0" "4")) (str.to.re "m")) (re.++ (re.++ (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.++ (str.to.re "") (str.to.re ""))))))) (str.to.re "i")) (re.union (re.++ (re.range "0" "5") (str.to.re "")) (re.union (re.union (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "")) (re.++ (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.union (str.to.re "") (str.to.re "1"))))))) (str.to.re "")) (re.++ (re.++ (re.range "0" "5") (str.to.re "5")) (re.union (re.union (re.++ (re.range "0" "9") (re.range "0" "4")) (str.to.re "2")) (re.union (re.union (re.opt (re.range "0" "9")) (re.range "0" "9")) (re.opt (re.union (str.to.re "") (str.to.re ","))))))))))
(check-sat)
