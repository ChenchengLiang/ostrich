(declare-const IPAddr String)
(declare-const o1 String)
(declare-const o2 String)
(declare-const o3 String)
(declare-const o4 String)
(assert (str.in.re IPAddr (re.++ (re.union (str.to.re "") (re.union (re.union (re.+ (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.union (str.to.re "R") (re.union (re.++ (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9"))) (re.* (re.range "0" "2"))) (re.union (str.to.re "") (re.++ (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9"))) (re.+ (re.range "0" "2")))))))) (re.union (re.+ (re.range "0" "2")) (re.union (re.* (re.range "0" "9")) (re.+ (re.range "0" "9")))))))
(assert (= IPAddr (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ o4 "") o3) ".") o2) "") o1)))
(assert (and (>= (str.len o1) 0) (>= (str.len o2) 0) (>= (str.len o3) 2) (>= (str.len o4) 1)))
(assert (or (= (str.to.int o1) 0) (= (str.len o2) 0) (= (str.len o3) 1) (= (str.to.int o4) 0)))
(assert (and (<= (str.to.int o1) 6) (<= (str.to.int o2) 0) (<= (str.len o3) 1) (<= (str.len o4) 6)))
(check-sat)
