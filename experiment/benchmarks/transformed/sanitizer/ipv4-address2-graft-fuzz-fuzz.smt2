(declare-const IPAddr String)
(assert (>= (str.to.int IPAddr) 3))
(assert (<= 14 (str.to.int IPAddr)))
(assert (str.in.re IPAddr (re.union (re.union (re.+ (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.++ (str.to.re "3") (re.++ (re.++ (re.+ (re.range "0" "2")) (re.union (re.* (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.union (str.to.re "") (re.union (re.++ (re.* (re.range "0" "2")) (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.union (str.to.re ".") (re.++ (re.+ (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.* (re.range "0" "9"))))))))))))
(assert (not (str.in.re IPAddr (re.union (re.union (re.++ (str.to.re "4Z") (re.range "0" "5")) (re.++ (re.union (str.to.re "_") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.union (str.to.re "") (str.to.re "("))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "p") (re.union (re.++ (re.union (str.to.re "EkZ") (re.range "0" "5")) (re.++ (re.union (str.to.re "%") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.union (str.to.re "2") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re ".") (re.union (re.union (re.++ (str.to.re "|") (re.range "0" "5")) (re.union (re.union (str.to.re "") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re "#") (str.to.re ""))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "3") (re.++ (re.union (str.to.re "{[O") (re.range "0" "5")) (re.union (re.union (str.to.re "T") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.union (str.to.re "") (re.union (re.range "0" "9") (re.opt (re.range "0" "9"))))) (str.to.re "]")))))))))))))
(check-sat)
