(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.union (re.union (re.+ (re.range "0" "2")) (re.++ (re.+ (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.++ (str.to.re "'\x0b'") (re.++ (re.union (re.* (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.+ (re.range "0" "9")))) (re.++ (str.to.re "") (re.union (re.++ (re.+ (re.range "0" "2")) (re.union (re.+ (re.range "0" "9")) (re.* (re.range "0" "9")))) (re.union (str.to.re "~W") (re.++ (re.* (re.range "0" "2")) (re.++ (re.* (re.range "0" "9")) (re.+ (re.range "0" "9"))))))))))))
(assert (not (str.in.re IPAddr (re.++ (re.union (re.++ (str.to.re "7W[2Y9") (re.range "0" "5")) (re.++ (re.union (str.to.re "") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re "0'\r'") (str.to.re "11"))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "#h") (re.union (re.union (re.++ (str.to.re "R}5") (re.range "0" "5")) (re.union (re.++ (str.to.re "1F]`") (re.union (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re "0") (str.to.re "1"))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.union (str.to.re "@'\x0b'") (re.++ (re.union (re.union (str.to.re "'\x0c'7tp' '") (re.range "0" "5")) (re.union (re.++ (str.to.re "0z") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.++ (re.opt (re.++ (str.to.re "U") (str.to.re ""))) (re.++ (re.range "0" "9") (re.opt (re.range "0" "9")))))) (re.++ (str.to.re "\\Z^") (re.++ (re.++ (str.to.re "(*P5") (re.range "0" "5")) (re.++ (re.union (str.to.re "2#CGC") (re.++ (re.range "0" "4") (re.range "0" "9"))) (re.union (re.opt (re.++ (str.to.re "%0") (str.to.re "11"))) (re.union (re.range "0" "9") (re.opt (re.range "0" "9")))))))))))))))
(check-sat)
