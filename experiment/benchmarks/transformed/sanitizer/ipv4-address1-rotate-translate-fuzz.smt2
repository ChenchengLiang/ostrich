(declare-const IPAddr String)
(assert (str.in.re IPAddr (re.++ (re.union (re.+ (re.* (re.range "0" "9"))) (re.range "0" "9")) (re.* (re.union (re.range "0" "2") (re.union (re.union (re.+ (re.* (re.range "0" "9"))) (re.range "0" "9")) (re.union (re.+ (re.union (re.range "0" "2") (re.union (re.++ (re.+ (re.* (re.range "0" "9"))) (re.range "0" "9")) (re.union (re.* (re.++ (re.range "0" "2") (re.union (re.* (re.++ (re.* (re.* (re.range "0" "9"))) (re.range "0" "9"))) (re.union (re.range "0" "2") (str.to.re "&"))))) (str.to.re "s"))))) (str.to.re "s"))))))))
(assert (not (str.in.re IPAddr (re.++ (re.range "0" "5") (re.++ (re.union (re.++ (re.union (re.range "0" "9") (str.to.re "C")) (re.++ (re.range "0" "9") (re.++ (re.opt (re.range "0" "9")) (re.opt (re.++ (str.to.re "") (str.to.re "")))))) (re.range "0" "4")) (re.++ (str.to.re "pIt") (re.++ (re.range "0" "5") (re.++ (re.++ (re.union (re.union (re.++ (re.range "0" "9") (str.to.re "O")) (re.union (re.range "0" "9") (re.++ (re.opt (re.range "0" "9")) (re.opt (re.union (str.to.re "W") (str.to.re ";")))))) (re.range "0" "4")) (re.++ (str.to.re "CX") (re.union (re.range "0" "5") (re.union (re.union (re.++ (re.union (re.++ (re.range "0" "9") (str.to.re "h")) (re.union (re.range "0" "9") (re.union (re.opt (re.range "0" "9")) (re.opt (re.union (str.to.re "0") (str.to.re "}")))))) (re.range "0" "4")) (re.++ (str.to.re "'\x0b'#d") (re.++ (re.union (re.range "0" "5") (re.union (re.union (re.++ (re.range "0" "9") (str.to.re "")) (re.union (re.range "0" "9") (re.++ (re.opt (re.range "0" "9")) (re.opt (re.++ (str.to.re "0") (str.to.re "")))))) (re.range "0" "4"))) (re.++ (str.to.re "5") (str.to.re ""))))) (str.to.re ""))))) (str.to.re "")))))))))
(check-sat)
